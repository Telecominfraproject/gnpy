{
  "comments": [
    {
      "key": {
        "uuid": "8472bc66_f863b0a4",
        "filename": "gnpy/core/info.py",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-11-12T16:31:28Z",
      "side": 1,
      "message": "just a comment here: This check does not depend only on baudrate, it also depends on the min spacing specified by the transceiver ... however at this stage there is no relation between the frequency index and the attached transceiver ... so maybe the check should (also) be added when calling this function with the desired set of transceivers ?",
      "revId": "79d1d5c0647284201951e474df857e586707fb07",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5da2f88_f82e1610",
        "filename": "gnpy/core/info.py",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-11-12T16:31:28Z",
      "side": 1,
      "message": "I understand that for generality, the f\u003dcentral frequency of a carrier might not be aligned on the ITU-T grid, as long as the channel (reserved spectrum) is.\nHowever, would if be meaningfull to introduce somehow the ITU G694 index to ease ?\n\nfor example if I have to si with bifferent nb of channels, I\u0027ll have a lot of difficulties to identify the smae carrier in both cases based on channel_number\n\n\nor maybe intrduce a correspondance function channel_number \u003c-\u003e frequency ?\n\n            # use ITU-T G694.1\n            # Flexible DWDM grid definition\n            # For the flexible DWDM grid, the allowed frequency slots have a nominal\n            # central frequency (in THz) defined by:\n            # 193.1 + n × 0.00625 where n is a positive or negative integer including 0\n            # and 0.00625 is the nominal central frequency granularity in THz\n            # and a slot width defined by:\n            # 12.5 × m where m is a positive integer and 12.5 is the slot width granularity in\n            # GHz.\n            # Any combination of frequency slots is allowed as long as no two frequency\n            # slots overlap.",
      "revId": "79d1d5c0647284201951e474df857e586707fb07",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc692e8_0bc70719",
        "filename": "gnpy/core/info.py",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-11-12T16:31:28Z",
      "side": 1,
      "message": "pref is used in elements to:\n- compute effective loss of ROADM -\u003e in case of multiple carriers with different power level, th function will need to be changed\n- compute effective_gain in amplifiers, based on effective history of channel propagation (pref span i). for example, in power_mode\u003dtrue, the effective_gain is computed based on previous power and target power (operational value of gain is ignored). In this case, I think that the used of the mean power of the si would not work properly, since, it would lead to different target gain.\n- and check power saturation in amplifiers (here again the computation is not correct if chanels have different power levels)\n\n\nso as a conclusion, we probably need to also adapt elements to benefit from your work",
      "revId": "79d1d5c0647284201951e474df857e586707fb07",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ed23a5_c1270cc0",
        "filename": "gnpy/core/info.py",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-11-12T16:31:28Z",
      "side": 1,
      "message": "Not sure to understand this function: is this to create array of value ?, why would the test on defult mean that name is missing ?\nmaybe add a docstring with example ?",
      "revId": "79d1d5c0647284201951e474df857e586707fb07",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}