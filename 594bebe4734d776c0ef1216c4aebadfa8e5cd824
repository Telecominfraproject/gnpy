{
  "comments": [
    {
      "key": {
        "uuid": "ed7359ec_98de2137",
        "filename": "gnpy/core/elements.py",
        "patchSetId": 14
      },
      "lineNbr": 237,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-11-03T15:43:32Z",
      "side": 1,
      "message": "a variable named \"temp\" doesn\u0027t tell much to a reviewer, so I\u0027ll be changing this to a more descriptive name.",
      "range": {
        "startLine": 237,
        "startChar": 8,
        "endLine": 237,
        "endChar": 12
      },
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "359662a6_7a261a4d",
        "filename": "gnpy/core/network.py",
        "patchSetId": 14
      },
      "lineNbr": 333,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-10-30T10:26:55Z",
      "side": 1,
      "message": "Is this necessary (same question for the this_node_degree[node.uid] \u003d prev_dp above)? The proposed code in the ROADM class checks for the presence of these attributes and should work without them so why add them here?",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c891468_12f29efd",
        "filename": "gnpy/core/network.py",
        "patchSetId": 14
      },
      "lineNbr": 333,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-10-30T17:48:03Z",
      "side": 1,
      "message": "I have added the dict in each roadm for each direction, because, then a user generating the auto_design json file has the template ready to adapt these values and explore different ones.",
      "parentUuid": "359662a6_7a261a4d",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ac2b453_5a99fdcf",
        "filename": "gnpy/core/network.py",
        "patchSetId": 14
      },
      "lineNbr": 333,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-11-03T15:43:32Z",
      "side": 1,
      "message": "I would prefer if this was in a separate commit (this is not *required* for the per-degree part, and it adds extra data to an output which might not be required). Just something to keep in mind for future work, I won\u0027t be holding this patch series any longer.",
      "parentUuid": "0c891468_12f29efd",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07888c2d_e36cb74b",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-10-30T10:26:55Z",
      "side": 1,
      "message": "Why this change?",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6ac64f2_18120f33",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-10-30T15:05:22Z",
      "side": 1,
      "message": "I guess it\u0027s related to this:\n\u003ein order to enable per degree power definition on direction where booster is not defined, enable the declaration of edfas in json without specifying type variety\nBut I don\u0027t understand how this is supposed to work or why it is needed. Can\u0027t you specify a node that is not an Edfa as the next node?",
      "parentUuid": "07888c2d_e36cb74b",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a99c75a1_8dbfe9d8",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-10-30T15:11:47Z",
      "side": 1,
      "message": "This change is to enable the user to define a direction on the ROADM based on booster name even if booster type_variety is not defined. I think Jan did not approve this one in patchset 12.\nRight now if a user defines an amplifier without specifying a type_variety this raises an error.",
      "parentUuid": "07888c2d_e36cb74b",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1d267b4_3a18f3b4",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-10-30T15:51:49Z",
      "side": 1,
      "message": "\u003e Right now if a user defines an amplifier without specifying a type_variety this raises an error.\n\nWell, the comment in the code says that this error is raised because otherwise \"the code will crash later!\". So why won\u0027t the code crash if you remove this check? Also, see my second comment above.",
      "parentUuid": "a99c75a1_8dbfe9d8",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf82aaca_ff01a8d2",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-10-30T16:16:42Z",
      "side": 1,
      "message": "Ok, I think I get it now. This is to solve the case when the user wants to have a booster but wants autodesign to select the type_variety. I misunderstood the motivation at first.",
      "parentUuid": "e1d267b4_3a18f3b4",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b4a25fa_4a73bb8d",
        "filename": "gnpy/tools/json_io.py",
        "patchSetId": 14
      },
      "lineNbr": 352,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2020-10-30T16:17:45Z",
      "side": 1,
      "message": "The code was crashing because all functions were looking for a type_variety that does not exist in order to populate the operationnal dict. Since that commit, the code has evolved and type_variety is added by the autodesign, so code can support a missing type_variety for EDFA elements (I checked this in several configs).\nFor fiber there is no autodesign to guess the type_variety, so this test is still needed.\n\nI think this is an improvement to enable user to define its booster names even if he does not know the type variety of it.",
      "parentUuid": "e1d267b4_3a18f3b4",
      "revId": "594bebe4734d776c0ef1216c4aebadfa8e5cd824",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}