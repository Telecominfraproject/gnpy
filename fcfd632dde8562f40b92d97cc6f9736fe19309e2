{
  "comments": [
    {
      "key": {
        "uuid": "2c0cbb4f_12aa9da8",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-12T09:39:21Z",
      "side": 1,
      "message": "This part can be replaced with the following:\n\n total_path \u003d compute_k_contrained_paths(network, req, k\u003d1)[0]\n total_path \u003d total_path[0] if total_path else []\n\nOr am I missing something?",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 304,
        "endChar": 23
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eda5c8a7_0cfb892c",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-06-12T14:20:52Z",
      "side": 1,
      "message": "From a functional perspective, yes, but I think it could be worth having this slight optimization for the most common case of k\u003d1.",
      "parentUuid": "2c0cbb4f_12aa9da8",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 304,
        "endChar": 23
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d98e85a0_e0951e60",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-06-12T19:27:09Z",
      "side": 1,
      "message": "Thinking more about this it\u0027s not that simple since this function has to handle the STRICT/LOOSE constraints and I also tried to make the print statements equivalent to the old version. We can think about how to simplify this in a separate patch, ok?",
      "parentUuid": "eda5c8a7_0cfb892c",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 304,
        "endChar": 23
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da5ae463_496c1feb",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-25T18:46:35Z",
      "side": 1,
      "message": "My comment applies to the highlighted part of the code. STRICT/LOOSE checking/handling happens after that, so that should not be a problem.\n\n(When this patch gets merged, we will have two similarly named functions which perform the same thing, yet they are slightly different because one of them tries to respect (some) STRICT/LOOSE mapping, while the other does not do that. I think I need to talk with Esther about this interface.)\n\nI think I don\u0027t follow re \"slight optimization\" because the code is almost identical. It calls the same networkx function, the only difference is that the existing compute_constrained_path() yields form the generator just once, while it\u0027s an option for the new addition. I don\u0027t think this is going to affect performance.",
      "parentUuid": "d98e85a0_e0951e60",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 304,
        "endChar": 23
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8c40c3e_3ffd3d3a",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-12T09:39:21Z",
      "side": 1,
      "message": "Can you add a docstring, please?\n\n- `k` asks for K paths\n- `early_stop` is asking to only *consider* that many paths prior to checking the required constraints",
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16ce2cb7_fa8d0999",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-25T18:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8c40c3e_3ffd3d3a",
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "273ad0c4_136efba7",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-12T09:39:21Z",
      "side": 1,
      "message": "I wonder what the use case behind this is -- in other words, did you need to use it in some scenario? When?",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 21
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f395c4fd_9b4414a7",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-06-12T14:20:52Z",
      "side": 1,
      "message": "The issue is that if you have a very large network, looping through all possible paths will take a long time (similar to the case with the all_simple_paths without cutoff) so I added this option to have have it term√≠nate early. But it\u0027s not a great solution and I can remove it if you prefer.",
      "parentUuid": "273ad0c4_136efba7",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 21
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85e99003_a487c4f0",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1017862
      },
      "writtenOn": "2020-06-12T19:27:09Z",
      "side": 1,
      "message": "I removed it which also allowed me to simplify the code further so I don\u0027t think your other comments below are applicable anymore to the new version.",
      "parentUuid": "f395c4fd_9b4414a7",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 21
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "874c8486_26f3a13e",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-25T18:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85e99003_a487c4f0",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 346,
        "endChar": 21
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b156f5c_30d89041",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 350,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-12T09:39:21Z",
      "side": 1,
      "message": "I think the code will be a little bit more readable if the logic is inverted, i.e., use an early-break to limit the nesting level:\n\n if !ispart(nodes_list, path):\n     continue\n k_total_paths.append(path)\n if len(k_total_paths) \u003d\u003d k:\n     break",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 350,
        "endChar": 25
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "536c610d_b07b5e2a",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 350,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-25T18:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b156f5c_30d89041",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 350,
        "endChar": 25
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c02386b_1d3e93ee",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 356,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-12T09:39:21Z",
      "side": 1,
      "message": "I think this code is not expected to throw NetworkXNoPath upon no available path, so please move it outside of the try/except block",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 356,
        "endChar": 59
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4776d8bf_8eebed40",
        "filename": "gnpy/topology/request.py",
        "patchSetId": 2
      },
      "lineNbr": 356,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2020-06-25T18:46:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c02386b_1d3e93ee",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 356,
        "endChar": 59
      },
      "revId": "fcfd632dde8562f40b92d97cc6f9736fe19309e2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}