{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f92af23b_5b26faf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1009907
      },
      "writtenOn": "2021-04-29T14:48:10Z",
      "side": 1,
      "message": "I read through this a number of items, looked at the places where this is used, and I\u0027m not sure if this is a correct fix. The comment in the function body does not match the function\u0027s new behavior once this is applied.\n\nIt would help me if you can describe in plain English how this thing is supposed to behave. Should it only return Fused and Fiber node types? It should keep doing that while the next (or prev) node fulfills that property, right?",
      "revId": "c14a76cdd97b6531b3e44eb62f1b3420f3e30a72",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b246eed7_c35b0249",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-04-29T15:16:00Z",
      "side": 1,
      "message": "The iterator is used to collect losses from a succession of \"fiber-fused-fiber-fused...-fiber\" in span_loss function. So it continues iteration if there are fused. However if a succession of fused is used in between amps ( amp-fused-amp-fused), then it does not stop iteration and returns nodes (amps) which do not have loss, and the span_loss function fails.\n\nSo the test in the iterator assumes implicit succession of fused in between fibers. instead I propose to explicitely exclude elements like roadm, edfa and transceiver from the collection.",
      "parentUuid": "f92af23b_5b26faf7",
      "revId": "c14a76cdd97b6531b3e44eb62f1b3420f3e30a72",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cad5e66_3d63860e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-04-29T15:16:00Z",
      "side": 1,
      "message": "Thanks for reviewing !",
      "revId": "c14a76cdd97b6531b3e44eb62f1b3420f3e30a72",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b70b2ce_5ff5ae81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017751
      },
      "writtenOn": "2021-04-30T07:58:20Z",
      "side": 1,
      "message": "I have an example file that shows that bug. I will provide a test with it.",
      "parentUuid": "b246eed7_c35b0249",
      "revId": "c14a76cdd97b6531b3e44eb62f1b3420f3e30a72",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}